!function(t) {
    "use strict";
    t('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function() {
        if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) {
            var o = t(this.hash);
            if ((o = o.length ? o : t("[name=" + this.hash.slice(1) + "]")).length) return t("html, body").animate({
                scrollTop: o.offset().top - 70
            }, 1e3, "easeInOutExpo"), !1
        }
    }), t(document).scroll(function() {
        100 < t(this).scrollTop() ? t(".scroll-to-top").fadeIn() : t(".scroll-to-top").fadeOut()
    }), t(".js-scroll-trigger").click(function() {
        t(".navbar-collapse").collapse("hide")
    }), t("body").scrollspy({
        target: "#mainNav",
        offset: 80
    });
    var o = function() {
        100 < t("#mainNav").offset().top ? t("#mainNav").addClass("navbar-shrink") : t("#mainNav").removeClass("navbar-shrink")
    };
    o(), t(window).scroll(o), t(".portfolio-item").magnificPopup({
        type: "inline",
        preloader: !1,
        focus: "#username",
        modal: !0
    }), t(document).on("click", ".portfolio-modal-dismiss", function(o) {
        o.preventDefault(), t.magnificPopup.close()
    }), t(function() {
        t("body").on("input propertychange", ".floating-label-form-group", function(o) {
            t(this).toggleClass("floating-label-form-group-with-value", !!t(o.target).val())
        }).on("focus", ".floating-label-form-group", function() {
            t(this).addClass("floating-label-form-group-with-focus")
        }).on("blur", ".floating-label-form-group", function() {
            t(this).removeClass("floating-label-form-group-with-focus")
        })
    })
}(jQuery);


// Function to initialize carousel
function initializeCarousel(carouselElement) {
    const carouselImages = carouselElement.querySelector('.carousel-images');
    const prevButton = carouselElement.querySelector('.prev');
    const nextButton = carouselElement.querySelector('.next');
  
    let counter = 0;
    const totalImages = carouselImages.querySelectorAll('img').length;
  
    // Function to update button status
    function updateButtonStatus() {
      prevButton.disabled = counter === 0;
      nextButton.disabled = counter === totalImages - 1;
    }
  
    // Call updateButtonStatus initially
    updateButtonStatus();
  
    nextButton.addEventListener('click', () => {
      if (counter < totalImages - 1) { // Check if there are images to navigate to
        counter++;
        carouselImages.style.transform = `translateX(-${counter * 100}%)`;
        updateButtonStatus();
      }
    });
  
    prevButton.addEventListener('click', () => {
      if (counter > 0) { // Check if there are images to navigate to
        counter--;
        carouselImages.style.transform = `translateX(-${counter * 100}%)`;
        updateButtonStatus();
      }
    });
  }
  
  // Initialize carousels
  const carousels = document.querySelectorAll('.carousel');
  carousels.forEach(initializeCarousel);
  
